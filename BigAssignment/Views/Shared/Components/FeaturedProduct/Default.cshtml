@using X.PagedList.Mvc.Core;
@using X.PagedList.Web.Common;
@model X.PagedList.IPagedList<Product>
<div class="container-fluid pt-5 pb-3">
    <h2 class="title position-relative text-dark text-uppercase mx-xl-5 mb-4">
        <span class="bg-secondary pe-3">Featured products</span>
    </h2>
    <div class="row px-xl-5">
        @foreach (var item in Model)
        {
            <div class="col-lg-3 col-md-4 col-sm-6 pb-1">
                <div style="white-space: nowrap; overflow: hidden; text-overflow: ellipsis;" class="product-item bg-light mb-4">
                    <div class="product-img">
                        <img style="object-fit: cover; width: 300px; height: 200px;" class="w-100" src="@Url.Content("../template/images/products/" + @item.Image)">
                        <div class="product-action">
                            <a class="btn btn-outline-dark btn-square rounded-0" href="#"><i class="fa fa-shopping-cart"></i></a>
                            <a class="btn btn-outline-dark btn-square rounded-0" href="#"><i class="far fa-heart"></i></a>
                        </div>
                    </div>
                    <div class="text-center py-4 product-info">
                        <a asp-controller ="Home" asp-action="DetailProduct" asp-route-IdProduct = "@item.Id" class="product-info__name" >@item.Name</a>
                        <div class="d-flex align-items-center justify-content-center mt-2">
                            @{
                                var discountPrice = item.Price - (item.Price * item.Discount / 100);
                                string formattedPrice = discountPrice.ToString("#,##0.##");
                            }
                            <h5>@formattedPrice VND</h5>
                            <h6 class="text-muted ms-2 text-decoration-line-through">@item.Price.ToString("#,##0.##")</h6>
                        </div>
                        <div class="d-flex align-items-center justify-content-center mb-1">
                            <small class="fa fa-star text-primary me-1"></small>
                            <small class="fa fa-star text-primary me-1"></small>
                            <small class="fa fa-star text-primary me-1"></small>
                            <small class="fa fa-star text-primary me-1"></small>
                            <small class="fa fa-star text-primary me-1"></small>
                            <small>(@item.Quantity)</small>
                        </div>
                    </div>
                </div>
            </div>
        }
        <div style="display: flex; justify-content: center; align-items: center;">
            @Html.PagedListPager(Model, page => Url.Action("Index", new {page = page}),
            new X.PagedList.Web.Common.PagedListRenderOptions(){
                LiElementClasses = new List<String> {"page-item"},
                PageClasses = new List<String> {"page-link"}
            })
        </div>
    </div>
</div>

</div>
<div style="display: flex;justify-content: center; align-items: center;">
@Html.PagedListPager(Model, page => Url.Action("Index", new {page = page}),
            new X.PagedList.Web.Common.PagedListRenderOptions(){
            LiElementClasses = new List<String> {"page-item"},
            PageClasses = new List<String> {"page-link"}
            })
        </div>
@*<ul class="pagination">
    <li class="">@Html.PagedListPager(Model, page=>Url.Action("Index", new{page = page}))</li>
</ul>
*@